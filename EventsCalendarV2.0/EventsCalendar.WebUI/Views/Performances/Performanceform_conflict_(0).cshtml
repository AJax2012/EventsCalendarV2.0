@model EventsCalendar.Core.ViewModels.PerformanceViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Performance.Id)

    <div class="form-horizontal">
        <h4>Performance</h4>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Performance.PerformerDto.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Performance.PerformerDto.Id, new SelectList(Model.Performers, "Id", "Name"), new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Performance.EventDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-2" style="right: 1.5%;">
                    @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control", @id = "datepicker" } })
                </div>
                <div class="col-md-2" style="right: 2%">
                    @Html.EditorFor(model => model.EventTime, new { htmlAttributes = new { @class = "form-control timepicker", @id = "timepicker" } })
                </div>
                <div class="clearfix"></div>
                @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Performance.EventDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Performance.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Performance.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Performance.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Performance.VenueDto.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Performance.VenueDto.Id, new SelectList(Model.Venues, "Id", "Name"), new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Performance.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Performance.Description, 6, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Performance.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready( function() {
            $('#datepicker').datepicker({
                minDate: 0,
                dateFormat: 'm/d/yy'
            });

            $('.timepicker').timepicker({
                timeFormat: 'h:mm p',
                interval: 30,
                startTime: '10:00',
                dynamic: false,
                dropdown: true,
                scrollbar: true
            });
        });
    </script>
}
